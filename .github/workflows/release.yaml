on:
  push:
    branches: ["master"]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Login to GitHub Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/backend/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/gregor-tokarev/backend:latest

      - name: run on server
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          command: |
            mkdir /home/app
            cd /home/app &&
            docker container prune -f &&
            docker image prune -a -f &&

            rm -f .env &&
            touch .env &&

            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env &&
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env &&
            echo "GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}" >> .env &&
            echo "NOTION_CLIENT_ID=${{ secrets.NOTION_CLIENT_ID }}" >> .env &&
            echo "NOTION_SECRET=${{ secrets.NOTION_SECRET }}" >> .env &&
            echo "LINEAR_CLINET_ID=${{ secrets.LINEAR_CLINET_ID }}" >> .env &&
            echo "LINEAR_SECRET=${{ secrets.LINEAR_SECRET }}" >> .env &&

            docker pull ghcr.io/gregor-tokarev/backend:latest &&
            docker stop $(docker ps -aq) &&
            docker rm $(docker ps -aq) &&
            docker run -p 4000:4000 -d --env-file=.env ghcr.io/gregor-tokarev/backend
